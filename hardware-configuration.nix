# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.kernelPackages = with pkgs;[
    linuxKernel.packages.linux_xanmod_stable.zfs_2_1
    linuxKernel.packages.linux_xanmod.xone
    linuxKernel.packages.linux_xanmod.openrazer
    linuxKernel.packages.linux_xanmod.cpupower
    linuxKernel.packages.linux_xanmod.system76-scheduler
    linuxPackages_latest

  ];
  boot.kernelParams = [ "amdgpu.ppfeaturemask=0xffffffff" ];

  chaotic.mesa-git = {
    enable = true;
    method = "replaceRuntimeDependencies";
    fallbackSpecialisation = false;
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c8256a68-2c48-4673-b0ee-0f338b17ac35";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9438-6F6D";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  
}
